<?php
/**
 * PurchaseOrderRequestOfferTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  kruegge82\weclapp
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace kruegge82\weclapp\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * PurchaseOrderRequestOfferTest Class Doc Comment
 *
 * @category    Class
 * @description PurchaseOrderRequestOffer
 * @package     kruegge82\weclapp
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class PurchaseOrderRequestOfferTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "PurchaseOrderRequestOffer"
     */
    public function testPurchaseOrderRequestOffer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "version"
     */
    public function testPropertyVersion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "created_date"
     */
    public function testPropertyCreatedDate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "creator_id"
     */
    public function testPropertyCreatorId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "currency_conversion_date"
     */
    public function testPropertyCurrencyConversionDate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "currency_conversion_locked"
     */
    public function testPropertyCurrencyConversionLocked()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "currency_conversion_rate"
     */
    public function testPropertyCurrencyConversionRate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "custom_attributes"
     */
    public function testPropertyCustomAttributes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "end_date"
     */
    public function testPropertyEndDate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gross_amount"
     */
    public function testPropertyGrossAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gross_amount_in_company_currency"
     */
    public function testPropertyGrossAmountInCompanyCurrency()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "header_discount"
     */
    public function testPropertyHeaderDiscount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "header_surcharge"
     */
    public function testPropertyHeaderSurcharge()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_modified_date"
     */
    public function testPropertyLastModifiedDate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "net_amount"
     */
    public function testPropertyNetAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "net_amount_in_company_currency"
     */
    public function testPropertyNetAmountInCompanyCurrency()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "non_standard_tax_id"
     */
    public function testPropertyNonStandardTaxId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "offer_date"
     */
    public function testPropertyOfferDate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_method_id"
     */
    public function testPropertyPaymentMethodId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "planned_delivery_date"
     */
    public function testPropertyPlannedDeliveryDate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order_request_offer_items"
     */
    public function testPropertyPurchaseOrderRequestOfferItems()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "record_currency_id"
     */
    public function testPropertyRecordCurrencyId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "record_email_addresses"
     */
    public function testPropertyRecordEmailAddresses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reply_date"
     */
    public function testPropertyReplyDate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "request_date"
     */
    public function testPropertyRequestDate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "start_date"
     */
    public function testPropertyStartDate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_id"
     */
    public function testPropertySupplierId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_reference"
     */
    public function testPropertySupplierReference()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "term_of_payment_id"
     */
    public function testPropertyTermOfPaymentId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "valid_from"
     */
    public function testPropertyValidFrom()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "valid_to"
     */
    public function testPropertyValidTo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
